PRAGMA FOREIGN_KEYS = ON;
PRAGMA JOURNAL_MODE = WAL;
PRAGMA SYNCHRONOUS = NORMAL;

CREATE TABLE IF NOT EXISTS `USERS` (
    `ID` INTEGER PRIMARY KEY AUTOINCREMENT,
    `EMAIL` VARCHAR(32) UNIQUE NOT NULL,
    `PASSWORD` VARCHAR(64) NOT NULL,

    `CREATED_AT` DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS `PROFILES` (
    `USER_ID` INTEGER PRIMARY KEY,
    `PICTURE` BLOB,
    `FIRST_NAME` VARCHAR(32),
    `LAST_NAME` VARCHAR(32),
    `EMAIL` VARCHAR(128),
    `PHONE` VARCHAR(10),
    `ADDRESS` VARCHAR(128),

    `SKILLS` TEXT,
    `EXPERIENCE` TEXT,
    `WEBSITE` VARCHAR(128),

    `LANGUAGE` VARCHAR(32),
    `TIMEZONE` VARCHAR(32),

    FOREIGN KEY(`USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS `ON_DEMAND_PROJECTS` (
    `ID` INTEGER PRIMARY KEY AUTOINCREMENT,
    `USER_ID` INTEGER NOT NULL,
    `TITLE` VARCHAR(128) NOT NULL,
    `DESCRIPTION` TEXT NOT NULL,
    `TAGS` TEXT,

    `STATUS` VARCHAR(32) DEFAULT 'OPEN',
    `PRICE` DECIMAL(10, 2) DEFAULT 0.00,
    `CREATED_AT` DATETIME DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY(`USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS `APPLICANTS` (
    `ID` INTEGER PRIMARY KEY AUTOINCREMENT,
    `PROJECT_ID` INTEGER NOT NULL,
    `USER_ID` INTEGER NOT NULL,
    `STATUS` VARCHAR(32) DEFAULT 'PENDING',
    `CREATED_AT` DATETIME DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY(`PROJECT_ID`) REFERENCES `ON_DEMAND_PROJECTS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY(`USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS `MESSAGES` (
    `ID` INTEGER PRIMARY KEY AUTOINCREMENT,
    `PROJECT_ID` INTEGER NOT NULL,
    `USER_ID` INTEGER NOT NULL,
    `MESSAGE` TEXT NOT NULL,
    `CREATED_AT` DATETIME DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY(`PROJECT_ID`) REFERENCES `ON_DEMAND_PROJECTS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY(`USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS `GIGS` (
    `ID` INTEGER PRIMARY KEY AUTOINCREMENT,
    `USER_ID` INTEGER NOT NULL,
    `TITLE` VARCHAR(128) NOT NULL,
    `DESCRIPTION` TEXT NOT NULL,

    `PRICE` DECIMAL(10, 2) DEFAULT 0.00,
    `PICTURE` BLOB,
    `CREATED_AT` DATETIME DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY(`USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS `PROJECT_REVIEWS` (
    `ID` INTEGER PRIMARY KEY AUTOINCREMENT,
    `PROJECT_ID` INTEGER NOT NULL,
    `REVIEWER_ID` INTEGER NOT NULL,
    `RATING` INTEGER,
    `REVIEW` TEXT,
    `CREATED_AT` DATETIME DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY(`PROJECT_ID`) REFERENCES `ON_DEMAND_PROJECTS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY(`REVIEWER_ID`) REFERENCES `USERS`(`ID`) ON DELETE CASCADE,

    UNIQUE(`PROJECT_ID`, `REVIEWER_ID`)
);

CREATE TABLE IF NOT EXISTS `GIG_REVIEWS` (
    `ID` INTEGER PRIMARY KEY AUTOINCREMENT,
    `GIG_ID` INTEGER NOT NULL,
    `REVIEWER_ID` INTEGER NOT NULL,
    `RATING` INTEGER,
    `REVIEW` TEXT,
    `CREATED_AT` DATETIME DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY(`GIG_ID`) REFERENCES `GIGS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY(`REVIEWER_ID`) REFERENCES `USERS`(`ID`) ON DELETE CASCADE,

    UNIQUE(`GIG_ID`, `REVIEWER_ID`)
);

CREATE TABLE IF NOT EXISTS `REVIEWS` (
    `ID` INTEGER PRIMARY KEY AUTOINCREMENT,
    `USER_ID` INTEGER NOT NULL,
    `REVIEWER_ID` INTEGER NOT NULL,
    `RATING` INTEGER,
    `REVIEW` TEXT,
    `CREATED_AT` DATETIME DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY(`USER_ID`) REFERENCES `USERS`(`ID`) ON DELETE CASCADE,
    FOREIGN KEY(`REVIEWER_ID`) REFERENCES `USERS`(`ID`) ON DELETE CASCADE,

    UNIQUE(`USER_ID`, `REVIEWER_ID`)
);